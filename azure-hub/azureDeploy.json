{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "virtualNetworkName": {
            "type": "string",
            "defaultValue": "hub-vnet",
            "metadata": {
                "description": "Hub's Virtual Network Name. You need this name to launch the spoke"
            }
        },
        "virtualNetworkAddressPrefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/16",
            "metadata": {
                "description": "CIDR for Virtual Network"
            }
        },
        "mgmtSubnetPrefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/24",
            "metadata": {
                "description": "CIDR for Management Network"
            }
        },
        "untrustedSubnetPrefix": {
            "type": "string",
            "defaultValue": "10.0.1.0/24",
            "metadata": {
                "description": "CIDR for Untrusted Network"
            }
        },
        "trustedSubnetPrefix": {
            "type": "string",
            "defaultValue": "10.0.2.0/24",
            "metadata": {
                "description": "CIDR for Trusted Network"
            }
        },
        "loadBalancerIP": {
            "type": "string",
            "metadata": {
                "description": "IP Address for the outbound load balancer resource in the Trust network."
            },
            "defaultValue": "10.0.2.4"
        },
 
        "storageName": {
            "type": "string",
            "metadata": {
                "description": "Name of the storage account created to store the VM's disks.  Storage account name must be globally unique."
            },
            "defaultValue": "Enter a globally unique name"
        },
        "storageType": {
            "type": "string",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Premium_LRS",
                "Standard_RAGRS"
            ],
            "metadata": {
                "description": "Type of the storage account created"
            },
            "defaultValue": "Standard_LRS"
        },
        "networkSecurityGroupInboundIP": {
            "type": "string",
            "metadata": {
                "description": "Your source public IP address. Added to the inbound NSG on eth0 (MGMT), to restrict access to the deployment."
            }
        },
        "imageVersion": {
            "type": "string",
            "allowedValues": [
                "latest",
                "8.1.0",
                "8.0.0"
                ],
            "defaultValue": "latest",
            "metadata": {
                "description": "VM-Series Firewall PAN OS Version"
            }
        },
        "firewallModel": {
            "type": "string",
            "defaultValue": "byol",
            "allowedValues": [
                "byol",
                "bundle1",
                "bundle2"
            ],
            "metadata": {
                "description": "byol = Bring Your Own License; bundle1 = Bundle 1 PAYG (Hourly); bundle2 = Bundle 2 PAYG (Hourly)"
            }
        },
        "firewallVmSize": {
            "type": "string",
            "allowedValues": [
                "Standard_D3",
                "Standard_D4",
                "Standard_D3_v2",
                "Standard_D4_v2",
                "Standard_D5_v2",
                "Standard_D14_v2",
                "Standard_A4"
            ],
            "metadata": {
                "description": "Azure VM size for VM-Series"
            },
            "defaultValue": "Standard_D3_v2"
        },
        "authenticationType": {
            "type": "string",
            "metadata": {
                "description": "Type of administrator user authentication "
            },
            "allowedValues": [
                "sshPublicKey",
                "password"
            ],
            "defaultValue": "password"
        },
        "username": {
            "type": "string",
            "defaultValue": "pandemo",
            "metadata": {
                "description": "Username of the administrator account of VM instances"
            }
        },
        "password": {
            "type": "securestring",
            "defaultValue": "Dem0pa$$w0rd",
            "metadata": {
                "description": "Password for the administrator account of all VM instances. Must be specified if Authentication Type is 'password'."
            }
        },
        "sshPublicKey": {
            "type": "string",
            "defaultValue": " ",
            "metadata": {
                "description": "SSH RSA public key file as a string. Must be specified if Authentication Type is 'sshPublicKey'."
            }
        },
		"BootstrapStorageAccount": {
			"defaultValue": "",
			"type": "String",
			"metadata": {
					"description": "Storage account hosting the bootstrap files"
				}
		},
        "BootstrapStorageAccountAccessKey": {
            "type": "securestring",
            "metadata":{
              "description": "Storage account access key to read blob data privately"
            }
        },

		"StorageAccountFileShare": {
			"defaultValue": "",
			"type": "String",
			"metadata": {
					"description": "The file share in the storage account where the bootstrap files are located"
				}
		},
		"StorageAccountFileShareDirectory": {
			"defaultValue": "None",
			"type": "String",
			"metadata": {
					"description": "The subdirectory hosting the bootstrap files. Only required if hosting multiple bootstrap directories on the same share"
				}
		},
        "vmScaleSetMinCount": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "The minimum (and default) number of FWs that will be deployed into the VM Scale Set."
            }
        },
        "vmScaleSetMaxCount": {
            "type": "int",
            "defaultValue": 3,
            "metadata": {
                "description": "The maximum number of FWs that can be deployed into the VM Scale Set."
            }
        },
        "scaleInThreshold": {
            "type": "int",
            "defaultValue": 20,
            "metadata": {
                "description": "The Threshold below which FW VM scale in kicks in."
            }
        },
        "scaleOutThreshold": {
            "type": "int",
            "defaultValue": 80,
            "metadata": {
                "description": "The Threshold above which FW VM scale out kicks in."
            }
        },
        "autoScaleMetric": {
             "type": "string",
             "allowedValues": [
                  "Data Plane CPU Utilization %", 
                  "GP Gateway Utilization %",
                  "GP Gateway Active Tunnels",
                  "Data Plane Packet Buffer Utilization %",
                  "Active Sessions",
                  "SSL Proxy Session Utilization %",
                  "Session Utilization %"                  
                ], 
             "defaultValue": "Active Sessions", 
             "metadata": {
                 "description": "Select the metric on which auto scale events should be triggered."
             } 
        },
        "vmLicenseHandlerUrl": {
            "type": "string",
            "metadata":{
              "description": "Azure Function handler launched as part of the Service Bus template which handles VM licensing."
            }
        }
    },
    
    "variables": {
        "baseUrl" : "https://raw.githubusercontent.com/rranjeet/azure-autoscaling/master/azure-hub",
        "deployStorageURL"     : "[concat(variables('baseUrl'),'/deployStorage.json')]",
        "deployNsgURL"         : "[concat(variables('baseUrl'),'/deployNsg.json')]",
        "deployVnetURL"        : "[concat(variables('baseUrl'),'/deployVnet.json')]",
        "deployLoadBalancerURL": "[concat(variables('baseUrl'),'/deployLoadBalancer.json')]",
        "appInsightsUrl": "[concat(variables('baseUrl'),'/deployAppInsights.json')]",
        "vmseriesURL" : "[concat(variables('baseUrl'),'/vmseries.json')]",

        "networkApiVersion": "2017-06-01",
        "computeApiVersion": "2017-03-30",
        "appInsightsApiVersion": "2018-05-01", 
        "namingInfix": "[substring(uniqueString(resourceGroup().id), 0, 5)]",
        "location"   : "[resourceGroup().location]",
        "rgname"     : "[resourceGroup().name]",
        "storageName": "[toLower(parameters('storageName'))]",
        "networkSecurityGroupName": "[concat(variables('rgname'), '-nsg' )]",
        "hubLoadBalancerSku": "Standard",
        "vmssName": "[concat('pavmfw', variables('namingInfix'))]",
        "fwLbName": "[concat(variables('rgname'), '_inbound_hub_fw_lb_', variables('namingInfix'))]",
        "fwLbBePoolName": "[concat(variables('rgname'), '_inbound_hub_fw_lb_backend_pool_', variables('namingInfix'))]",
        "appInsightsName": "[concat(variables('rgname'), '-appinsights-', variables('namingInfix'))]",
        "loadBalancerName": "[concat(variables('rgname'), '-outbound-lb' )]",
        "MgmtSubnetName" : "[concat(parameters('virtualNetworkName'), '-mgmt-subnet')]",
        "untrustedSubnetName" : "[concat(parameters('virtualNetworkName'), '-untrust-subnet')]",
        "trustedSubnetName" : "[concat(parameters('virtualNetworkName'), '-trust-subnet')]",
        "mgmtPublicIPName" : "[concat(variables('rgname'), '-mgmt-pip-', variables('namingInfix'))]",
        "firewallVmName": "[concat(variables('rgName'), '-outbound-vm-series-firewall')]",
		"customDataField": "[concat('storage-account=', parameters('BootstrapStorageAccount'), ',access-key=', parameters('BootstrapStorageAccountAccessKey'), ',file-share=', parameters('StorageAccountFileShare'),',share-directory=', parameters('StorageAccountFileShareDirectory'))]",
        "space": " "
    },

    "resources": [
        {
            "name": "SetupAppInsights",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('appInsightsApiVersion')]",
            "properties": { 
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('appInsightsUrl')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appInsightsName": {
                        "value": "[variables('appInsightsName')]"
                    }
                }
            }
        },
        {
            "name": "PublishCustomMetrics",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-06-01",
            "dependsOn": [
                "Microsoft.Resources/deployments/SetupAppInsights"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('vmLicenseHandlerUrl'), '&ik=', reference('SetupAppInsights').outputs.instrumentationKey.value, '&subsId=', subscription().subscriptionId, '&rg=', variables('rgname'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters":  {}
            }
        },
        {    
            "name": "deployStorage",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "dependsOn": [
                "Microsoft.Resources/deployments/PublishCustomMetrics"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('deployStorageURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "storageType": {
                        "value": "[parameters('storageType')]"
                    },
                    "storageName": {
                        "value": "[variables('storageName')]"
                    }
                }
            }
        },
        {    
            "name": "deployNsg",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "dependsOn": [
                "Microsoft.Resources/deployments/deployStorage"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('deployNsgURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "nsgName": {
                        "value": "[variables('networkSecurityGroupName')]"
                    },
                    "srcIPInboundNSG": {
                        "value": "[parameters('networkSecurityGroupInboundIP')]"
                    },
                    "virtualNetworkAddressPrefix": {
                        "value": "[parameters('virtualNetworkAddressPrefix')]"
                    }
                }
            }
        },
        {
            "name": "deployVnet",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "dependsOn": [
                "Microsoft.Resources/deployments/deployNsg",
                "Microsoft.Resources/deployments/deployStorage"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('deployVnetURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "nsgName": {
                        "value": "[variables('networkSecurityGroupName')]"
                    },
                    "virtualNetworkName": {
                        "value": "[parameters('virtualNetworkName')]"
                    },
                    "virtualNetworkAddressPrefix": {
                        "value": "[parameters('virtualNetworkAddressPrefix')]"
                    },
                    "mgmtSubnetName": {
                        "value": "[variables('mgmtSubnetName')]"
                    },
                    "untrustSubnetName": {
                        "value": "[variables('untrustedSubnetName')]"
                    },
                    "trustSubnetName": {
                        "value": "[variables('trustedSubnetName')]"
                    },
                    "mgmtSubnetPrefix": {
                        "value": "[parameters('mgmtSubnetPrefix')]"
                    },
                    "untrustSubnetPrefix": {
                        "value": "[parameters('untrustedSubnetPrefix')]"
                    },
                    "trustSubnetPrefix": {
                        "value": "[parameters('trustedSubnetPrefix')]"
                    }
                }
            }
        },
        {    
            "name": "deployOutboundLoadBalancer",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "dependsOn": [
                "Microsoft.Resources/deployments/deployVNet"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('deployLoadBalancerURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "loadBalancerSku": {
                        "value": "[variables('hubLoadBalancerSku')]"
                    },
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "virtualNetworkRG": {
                        "value": "[variables('rgName')]"
                    },
                    "virtualNetworkName": {
                        "value": "[parameters('virtualNetworkName')]"
                    },
                    "subnetName": {
                        "value": "[variables('trustedSubnetName')]"
                    },
                    "loadBalancerName": {
                        "value": "[variables('loadBalancerName')]"
                    },
                    "loadBalancerIP": {
                        "value": "[parameters('loadBalancerIP')]"
                    },
                    "fwLbBePoolName": {
                        "value": "[variables('fwLbBePoolName')]"
                    }
                }
            }
        },
        {    
            "name": "SetupHubVMSeries",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "dependsOn": [
                "Microsoft.Resources/deployments/deployStorage",
                "Microsoft.Resources/deployments/deployVNet",
                "Microsoft.Resources/deployments/deployOutboundLoadBalancer"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vmseriesURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "vmssName": {
                        "value": "[variables('vmssName')]"
                    },
                    "vmSize": {
                         "value": "[parameters('firewallVmSize')]"
                    },
                    "vmScaleSetMinCount": {
                        "value": "[parameters('vmScaleSetMinCount')]"
                    },
                    "vmScaleSetMaxCount": {
                        "value": "[parameters('vmScaleSetMaxCount')]"
                    },
                    "vmSku": {
                         "value": "[parameters('firewallModel')]"
                    },
                    "adminUsername": {
                         "value": "[parameters('username')]"
                    },
                    "adminPassword": {
                         "value": "[parameters('password')]"
                    },
                    "customDataField": {
                        "value": "[variables('customDataField')]"
                    },
                    "virtualNetworkName": {
                         "value": "[parameters('virtualNetworkName')]"
                    },
                    "subnetNameMgmt": {
                        "value": "[variables('MgmtSubnetName')]"
                    },
                    "subnetNameUntrust": {
                        "value": "[variables('untrustedSubnetName')]"
                    },
                    "subnetNameTrust": {
                        "value": "[variables('trustedSubnetName')]"
                    },
                    "fwLbName": {
                        "value": "[variables('loadBalancerName')]"
                    },
                    "fwLbBePoolName": {
                        "value": "[variables('fwLbBePoolName')]"
                    },
                    "appInsightsName": {
                        "value": "[variables('appInsightsName')]"
                    },
                    "autoScaleMetric": {
                        "value": "[parameters('autoScaleMetric')]"
                    },
                    "scaleInThreshold": {
                        "value": "[parameters('scaleInThreshold')]"
                    },
                    "scaleOutThreshold": {
                        "value": "[parameters('scaleOutThreshold')]"
                    },
                    "vmLicenseHandlerUrl": {
                        "value": "[parameters('vmLicenseHandlerUrl')]"
                    }
                }
            }
        }
    ],
    "outputs": {}
}
