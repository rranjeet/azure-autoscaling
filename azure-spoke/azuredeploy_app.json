{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "connectToHub": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "metadata": {
                "description": "Select Yes, if you want the outbound traffic to be protected by a hub firewall."
            }
        },
        "hubResourceGroupName": {
            "type": "string",
            "metadata": {
                "description": "Resource group name of the Hub, if the app is going to be connected to a hub firewall"
            },
            "defaultValue": "hub-resource-group"
        },
        "hubVnetName": {
            "type": "string",
            "defaultValue": "hub-vnet",
            "metadata": {
                "description": "VN Name of the VNet where the hub resides, if the app is going to be connected to a hub firewall"
            }
        },
        "hubLoadBalancerIP": {
            "type": "string",
            "metadata": {
                "description": "IP Address of the outbound Load Balancer in the hub, if the app is going to be connected to a firewall."
            },
            "defaultValue": "1.2.3.4"
        },
        "applicationLoadBalancerIP": {
            "type": "string",
            "metadata": {
                "description": "IP Address of the Load Balancer frontending the app."
            }
        },
        "inboundFirewallResourceGroupName": {
            "type": "string",
            "metadata": {
                "description": "Resource group name of the inbound firewall"
            }
        },
        "inboundFirewallVnetName": {
            "type": "string",
            "metadata": {
                "description": "VN Name of the VNet where the inbound firewall resides, if the app is going to be connected to a hub firewall"
            }
        },
        "networkSecurityGroupInboundSrcIP": {
            "type": "string",
             "metadata": {
                 "description": "Your source public IP address. Added to the inbound NSG on eth0 (MGMT), to restrict access to the deployment."
             },
             "defaultValue": "1.1.1.1/32"
        },
        "virtualNetworkName": {
            "type": "string",
            "defaultValue": "spoke-app-vnet",
            "metadata": {
                "description": "Virtual Network Name of the backend application"
            }
        },
        "virtualNetworkAddressPrefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/16",
            "metadata": {
                "description": "CIDR for Virtual Network"
            }
        },
        "mgmtSubnetPrefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/24",
            "metadata": {
                "description": "CIDR for Management Network"
            }
        },
        "trustedSubnetPrefix": {
            "type": "string",
            "defaultValue": "10.0.1.0/24",
            "metadata": {
                "description": "CIDR for Trusted Network"
            }
        },
        "backendSubnetPrefix": {
            "type": "string",
            "defaultValue": "10.0.2.0/24",
            "metadata": {
                "description": "CIDR for Backend WWW Network"
            }
        },
        "backendVmSize": {
             "type": "string",
             "allowedValues": [
                    "Standard_A1",
                    "Standard_D1",
                    "Standard_D1_v2"
             ],
             "metadata": {
                "description": "Azure VM size for backend VMs. Not all sizes are available in all regions."
             },
             "defaultValue": "Standard_D1_v2"
        },
        "storageAccountName": {
            "type": "string",
            "metadata": {
                "description": "Name of the storage account created to store the VM's disks. Storage account name must be globally unique."
            } 
        },
        "storageAccountType": {
            "type": "string",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Premium_LRS",
                "Standard_RAGRS"
            ],
            "metadata": {
                "description": "Type of the storage account created"
            },
            "defaultValue": "Standard_LRS"
        },
        "username": {
            "type": "string",
            "defaultValue": "pandemo",
            "metadata": {
                "description": "Username of the administrator account of VM instances"
            }
        },
        "password": {
            "type": "securestring",
            "defaultValue": "Dem0pa$$w0rd",
            "metadata": {
                "description": "Password for the administrator account of all VM instances. Must be specified if Authentication Type is 'password'."
            }
        }
    },
    "variables": {
        "location" : "[resourceGroup().location]",
        "namingInfix": "[substring(uniqueString(resourceGroup().id), 0, 5)]",
        "rgname" : "[resourceGroup().name]",
        "networkSecurityGroupName" : "[concat(variables('rgname'), '-mgmt-nsg-', variables('namingInfix'))]",
        "trustedSubnetName" : "[concat(parameters('virtualNetworkName'), '-trust-subnet')]",
        "backendSubnetName" : "[concat(parameters('virtualNetworkName'), '-backend-subnet')]",
        "internalLoadBalancerName" : "myPrivateLB",
        "baseUrl" : "https://raw.githubusercontent.com/rranjeet/azure-autoscaling/master/azure-spoke",
        "nsgURL" : "[concat(variables('baseUrl'),'/nsg-new.json')]",
        "appVnetURL" : "[concat(variables('baseUrl'),'/deployAppVnet.json')]",
        "privateLBURL" : "[concat(variables('baseUrl'),'/private-lb-password.json')]",
        "storageAccountSetupURL" : "[concat(variables('baseUrl'),'/deployStorage.json')]",
        "vnetPeeringURL": "[concat(variables('baseUrl'), '/deployVnetPeering.json')]",
        "defaultUdrSetupURL": "[concat(variables('baseUrl'), '/deployDefaultUDR.json')]",
        "networkApiVersion": "2017-06-01",
        "computeApiVersion": "2017-03-30",
        "space": " "
    },
    "resources": [
        {
            "name": "SetupNSG",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "properties": { 
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('nsgURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "nsgName": {
                        "value": "[variables('networkSecurityGroupName')]"
                    },
                    "srcIPInboundNSG": {
                        "value": "[parameters('networkSecurityGroupInboundSrcIP')]"
                    },
                    "virtualNetworkAddressPrefix": {
                        "value": "[parameters('virtualNetworkAddressPrefix')]"
                    }
                }
            }
        },
        {
            "condition": "[equals(parameters('connectToHub'), 'Yes')]",
            "name": "SetupDefaultUDR",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "dependsOn": [
                "Microsoft.Resources/deployments/SetupNSG"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('defaultUdrSetupURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "subnetPrefix": {
                         "value": "0.0.0.0/0"
                    },
                    "nextHopIP": {
                         "value": "[parameters('hubLoadBalancerIP')]"
                    }
                }
            }
        },
        {
            "name": "SetupVNET",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "dependsOn": [
                "Microsoft.Resources/deployments/SetupNSG"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('appVnetURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "nsgName": {
                        "value": "[variables('networkSecurityGroupName')]"
                    },
                    "virtualNetworkName": {
                        "value": "[parameters('virtualNetworkName')]"
                    },
                    "virtualNetworkAddressPrefix": {
                        "value": "[parameters('virtualNetworkAddressPrefix')]"
                    },
                    "subnetLBName": {
                         "value": "[variables('trustedSubnetName')]"
                    },
                    "subnetWWWName": {
                         "value": "[variables('backendSubnetName')]"
                    },
                    "subnetLBPrefix": {
                         "value": "[parameters('trustedSubnetPrefix')]"
                    },
                    "subnetWWWPrefix": {
                         "value": "[parameters('backendSubnetPrefix')]"
                    }
                }
            }
        },
        {
            "name": "SettingUpStorageAccount",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('storageAccountSetupURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "storageAccountType": {
                        "value": "[parameters('storageAccountType')]"
                    },
                    "storageAccountName": {
                        "value": "[parameters('storageAccountName')]"
                    }
                }
            }
        },
        {
            "name": "SetupInternalLoadBalancer",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "dependsOn": [
                "Microsoft.Resources/deployments/SetupVNET"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('privateLBURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "storageAccountName": {
                         "value": "[reference('SettingUpStorageAccount').outputs.sid.value]"
                    },
                    "ilbFrontendIP": {
                        "value": "[parameters('applicationLoadBalancerIP')]"
                    },
                    "virtualNetworkName": {
                         "value": "[reference('SetupVNET').outputs.vnetName.value]"
                    },
                    "virtualNetworkExistingRGName": {
                         "value": "[variables('rgname')]"
                    },
                    "lbName": {
                         "value": "[variables('internalLoadBalancerName')]"
                    },
                    "adminUsername": {
                         "value": "[parameters('username')]"
                    },
                    "adminPassword": {
                         "value": "[parameters('password')]"
                    },
                    "subnetName": {
                         "value": "[variables('backendSubnetName')]"
                    },
                    "frontendSubnetName": {
                         "value": "[variables('trustedSubnetName')]"
                    },
                    "vmSize": {
                         "value": "[parameters('backendVmSize')]"
                    },
                    "baseUrl": {
                         "value": "[variables('baseUrl')]"
                    },
                    "inboundFirewallResourceGroupName": {
                         "value": "[parameters('inboundFirewallResourceGroupName')]"
                    }
                }
             }
        },
        {
            "condition": "[equals(parameters('connectToHub'), 'Yes')]",
            "name": "SetupHubVNetPeering",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2017-05-10",
            "dependsOn": [
                "Microsoft.Resources/deployments/SetupVNET"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vnetPeeringURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "vNet1Name": {
                         "value": "[parameters('virtualNetworkName')]"
                    },
                    "vNet2Name": {
                         "value": "[parameters('hubVnetName')]"
                    },
                    "vNet2ResourceGroupName": {
                         "value": "[parameters('hubResourceGroupName')]"
                    }
                }
             }
        },
        {
            "name": "SetupFwVNetPeering",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2017-05-10",
            "dependsOn": [
                "Microsoft.Resources/deployments/SetupVNET"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vnetPeeringURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "vNet1Name": {
                         "value": "[parameters('virtualNetworkName')]"
                    },
                    "vNet2Name": {
                         "value": "[parameters('inboundFirewallVnetName')]"
                    },
                    "vNet2ResourceGroupName": {
                         "value": "[parameters('inboundFirewallResourceGroupName')]"
                    }
                }
             }
        }
    ],
    "outputs": {
    }
}
